<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yqwl.dao.FeedbackMapper">
	<resultMap id="BaseResultMap" type="com.yqwl.pojo.Feedback">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="hone_id" property="hone_id" jdbcType="BIGINT" />
		<result column="broker_id" property="broker_id" jdbcType="BIGINT" />
		<result column="centext" property="centext" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		`id`, `hone_id`, `broker_id`, `centext`, `time`
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from `t_feedback`
		where `id` = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from `t_feedback`
		where `id` = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.yqwl.pojo.Feedback">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into `t_feedback` (`hone_id`, `broker_id`, `centext`,
		`time`)
		values (#{hone_id,jdbcType=BIGINT}, #{broker_id,jdbcType=BIGINT},
		#{centext,jdbcType=VARCHAR},
		#{time,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.yqwl.pojo.Feedback">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into `t_feedback`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="hone_id != null">
				`hone_id`,
			</if>
			<if test="broker_id != null">
				`broker_id`,
			</if>
			<if test="centext != null">
				`centext`,
			</if>
			<if test="time != null">
				`time`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="hone_id != null">
				#{hone_id,jdbcType=BIGINT},
			</if>
			<if test="broker_id != null">
				#{broker_id,jdbcType=BIGINT},
			</if>
			<if test="centext != null">
				#{centext,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yqwl.pojo.Feedback">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update `t_feedback`
		<set>
			<if test="hone_id != null">
				`hone_id` = #{hone_id,jdbcType=BIGINT},
			</if>
			<if test="broker_id != null">
				`broker_id` = #{broker_id,jdbcType=BIGINT},
			</if>
			<if test="centext != null">
				`centext` = #{centext,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				`time` = #{time,jdbcType=TIMESTAMP},
			</if>
		</set>
		where `id` = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yqwl.pojo.Feedback">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update `t_feedback`
		set `hone_id` = #{hone_id,jdbcType=BIGINT},
		`broker_id` = #{broker_id,jdbcType=BIGINT},
		`centext` = #{centext,jdbcType=VARCHAR},
		`time` = #{time,jdbcType=TIMESTAMP}
		where `id` = #{id,jdbcType=BIGINT}
	</update>
	<!-- 查询该房源的反馈信息 -->
	<select id="selectListKey" parameterType="java.lang.Long"
		resultType="com.yqwl.Vo.FeedbackVo">
		SELECT
		f.centext,
		f.time,
		b.real_name
		FROM
		t_feedback f,
		t_broker b
		WHERE
		f.broker_id = b.id
		AND f.hone_id = #{hone_id}
		ORDER BY f.id DESC
	</select>
	
	<!-- 查询该房源的反馈信息 -->
	<select id="selectListFeed" resultType="com.yqwl.Vo.FeedbackVo">
		SELECT
		f.centext,
		f.time,
		b.real_name
		FROM
		t_feedback f,
		t_broker b
		WHERE
		f.broker_id = b.id
		AND f.hone_id = #{hone_id}
		ORDER BY f.id DESC
		LIMIT #{page},#{limit}
	</select>
	<!-- 查询该房源的反馈信息数量 -->
	<select id="selectFeedCount" resultType="java.lang.Integer">
		SELECT
		COUNT(f.id) count
		FROM
		t_feedback f,
		t_broker b
		WHERE
		f.broker_id = b.id
		AND f.hone_id = #{hone_id}
	</select>
</mapper>