<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yqwl.dao.HousesNewMapper">
	<resultMap id="BaseResultMap" type="com.yqwl.pojo.HousesNew">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="houes_number" jdbcType="VARCHAR" property="houes_number" />
		<result column="building_id" jdbcType="BIGINT" property="building_id" />
		<result column="work_name" jdbcType="VARCHAR" property="work_name" />
		<result column="house_picture" jdbcType="VARCHAR" property="house_picture" />
		<result column="office_space" jdbcType="INTEGER" property="office_space" />
		<result column="location_number" jdbcType="INTEGER" property="location_number" />
		<result column="house_type" jdbcType="VARCHAR" property="house_type" />
		<result column="location" jdbcType="INTEGER" property="location" />
		<result column="money" jdbcType="DECIMAL" property="money" />
		<result column="money_unit" jdbcType="INTEGER" property="money_unit" />
		<result column="rent_time" jdbcType="INTEGER" property="rent_time" />
		<result column="maintain_time" jdbcType="TIMESTAMP" property="maintain_time" />
		<result column="begin_time" jdbcType="TIMESTAMP" property="begin_time" />
		<result column="times" jdbcType="TIMESTAMP" property="times" />
		<result column="fitment" jdbcType="INTEGER" property="fitment" />
		<result column="types" jdbcType="INTEGER" property="types" />
		<result column="entering_broker_id" jdbcType="BIGINT"
			property="entering_broker_id" />
		<result column="home_name" jdbcType="VARCHAR" property="home_name" />
		<result column="home_number" jdbcType="VARCHAR" property="home_number" />
		<result column="solid_broker_id" jdbcType="BIGINT" property="solid_broker_id" />
		<result column="maintain_broker_id" jdbcType="BIGINT"
			property="maintain_broker_id" />
		<result column="key_broker_id" jdbcType="BIGINT" property="key_broker_id" />
		<result column="whether" jdbcType="INTEGER" property="whether" />
		<result column="door_id" jdbcType="BIGINT" property="door_id" />
		<result column="shop_id" jdbcType="BIGINT" property="shop_id" />
		<result column="open_broker_id" jdbcType="BIGINT" property="open_broker_id" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		`id`, `houes_number`, `building_id`, `work_name`, `house_picture`,
		`office_space`,
		`location_number`, `house_type`, `location`, `money`, `money_unit`, `rent_time`,
		`maintain_time`, `begin_time`, `times`, `fitment`, `types`,
		`entering_broker_id`,
		`home_name`, `home_number`, `solid_broker_id`, `maintain_broker_id`,
		`key_broker_id`,
		`whether`, `door_id`, `shop_id`, `open_broker_id`
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from `t_houses_new`
		where `id` = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from `t_houses_new`
		where `id` = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.yqwl.pojo.HousesNew">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into `t_houses_new` (`houes_number`, `building_id`,
		`work_name`,
		`house_picture`, `office_space`, `location_number`,
		`house_type`, `location`, `money`,
		`money_unit`, `rent_time`, `maintain_time`,
		`begin_time`, `times`, `fitment`,
		`types`, `entering_broker_id`, `home_name`,
		`home_number`, `solid_broker_id`, `maintain_broker_id`,
		`key_broker_id`, `whether`, `door_id`,
		`shop_id`, `open_broker_id`)
		values (#{houes_number,jdbcType=VARCHAR}, #{building_id,jdbcType=BIGINT},
		#{work_name,jdbcType=VARCHAR},
		#{house_picture,jdbcType=VARCHAR}, #{office_space,jdbcType=INTEGER},
		#{location_number,jdbcType=INTEGER},
		#{house_type,jdbcType=VARCHAR}, #{location,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL},
		#{money_unit,jdbcType=INTEGER}, #{rent_time,jdbcType=INTEGER},
		#{maintain_time,jdbcType=TIMESTAMP},
		#{begin_time,jdbcType=TIMESTAMP}, #{times,jdbcType=TIMESTAMP}, #{fitment,jdbcType=INTEGER},
		#{types,jdbcType=INTEGER}, #{entering_broker_id,jdbcType=BIGINT},
		#{home_name,jdbcType=VARCHAR},
		#{home_number,jdbcType=VARCHAR}, #{solid_broker_id,jdbcType=BIGINT},
		#{maintain_broker_id,jdbcType=BIGINT},
		#{key_broker_id,jdbcType=BIGINT}, #{whether,jdbcType=INTEGER},
		#{door_id,jdbcType=BIGINT},
		#{shop_id,jdbcType=BIGINT}, #{open_broker_id,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.yqwl.pojo.HousesNew">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into `t_houses_new`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="houes_number != null">
				`houes_number`,
			</if>
			<if test="building_id != null">
				`building_id`,
			</if>
			<if test="work_name != null">
				`work_name`,
			</if>
			<if test="house_picture != null">
				`house_picture`,
			</if>
			<if test="office_space != null">
				`office_space`,
			</if>
			<if test="location_number != null">
				`location_number`,
			</if>
			<if test="house_type != null">
				`house_type`,
			</if>
			<if test="location != null">
				`location`,
			</if>
			<if test="money != null">
				`money`,
			</if>
			<if test="money_unit != null">
				`money_unit`,
			</if>
			<if test="rent_time != null">
				`rent_time`,
			</if>
			<if test="maintain_time != null">
				`maintain_time`,
			</if>
			<if test="begin_time != null">
				`begin_time`,
			</if>
			<if test="times != null">
				`times`,
			</if>
			<if test="fitment != null">
				`fitment`,
			</if>
			<if test="types != null">
				`types`,
			</if>
			<if test="entering_broker_id != null">
				`entering_broker_id`,
			</if>
			<if test="home_name != null">
				`home_name`,
			</if>
			<if test="home_number != null">
				`home_number`,
			</if>
			<if test="solid_broker_id != null">
				`solid_broker_id`,
			</if>
			<if test="maintain_broker_id != null">
				`maintain_broker_id`,
			</if>
			<if test="key_broker_id != null">
				`key_broker_id`,
			</if>
			<if test="whether != null">
				`whether`,
			</if>
			<if test="door_id != null">
				`door_id`,
			</if>
			<if test="shop_id != null">
				`shop_id`,
			</if>
			<if test="open_broker_id != null">
				`open_broker_id`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="houes_number != null">
				#{houes_number,jdbcType=VARCHAR},
			</if>
			<if test="building_id != null">
				#{building_id,jdbcType=BIGINT},
			</if>
			<if test="work_name != null">
				#{work_name,jdbcType=VARCHAR},
			</if>
			<if test="house_picture != null">
				#{house_picture,jdbcType=VARCHAR},
			</if>
			<if test="office_space != null">
				#{office_space,jdbcType=INTEGER},
			</if>
			<if test="location_number != null">
				#{location_number,jdbcType=INTEGER},
			</if>
			<if test="house_type != null">
				#{house_type,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				#{location,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				#{money,jdbcType=DECIMAL},
			</if>
			<if test="money_unit != null">
				#{money_unit,jdbcType=INTEGER},
			</if>
			<if test="rent_time != null">
				#{rent_time,jdbcType=INTEGER},
			</if>
			<if test="maintain_time != null">
				#{maintain_time,jdbcType=TIMESTAMP},
			</if>
			<if test="begin_time != null">
				#{begin_time,jdbcType=TIMESTAMP},
			</if>
			<if test="times != null">
				#{times,jdbcType=TIMESTAMP},
			</if>
			<if test="fitment != null">
				#{fitment,jdbcType=INTEGER},
			</if>
			<if test="types != null">
				#{types,jdbcType=INTEGER},
			</if>
			<if test="entering_broker_id != null">
				#{entering_broker_id,jdbcType=BIGINT},
			</if>
			<if test="home_name != null">
				#{home_name,jdbcType=VARCHAR},
			</if>
			<if test="home_number != null">
				#{home_number,jdbcType=VARCHAR},
			</if>
			<if test="solid_broker_id != null">
				#{solid_broker_id,jdbcType=BIGINT},
			</if>
			<if test="maintain_broker_id != null">
				#{maintain_broker_id,jdbcType=BIGINT},
			</if>
			<if test="key_broker_id != null">
				#{key_broker_id,jdbcType=BIGINT},
			</if>
			<if test="whether != null">
				#{whether,jdbcType=INTEGER},
			</if>
			<if test="door_id != null">
				#{door_id,jdbcType=BIGINT},
			</if>
			<if test="shop_id != null">
				#{shop_id,jdbcType=BIGINT},
			</if>
			<if test="open_broker_id != null">
				#{open_broker_id,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yqwl.pojo.HousesNew">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update `t_houses_new`
		<set>
			<if test="houes_number != null">
				`houes_number` = #{houes_number,jdbcType=VARCHAR},
			</if>
			<if test="building_id != null">
				`building_id` = #{building_id,jdbcType=BIGINT},
			</if>
			<if test="work_name != null">
				`work_name` = #{work_name,jdbcType=VARCHAR},
			</if>
			<if test="house_picture != null">
				`house_picture` = #{house_picture,jdbcType=VARCHAR},
			</if>
			<if test="office_space != null">
				`office_space` = #{office_space,jdbcType=INTEGER},
			</if>
			<if test="location_number != null">
				`location_number` = #{location_number,jdbcType=INTEGER},
			</if>
			<if test="house_type != null">
				`house_type` = #{house_type,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				`location` = #{location,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				`money` = #{money,jdbcType=DECIMAL},
			</if>
			<if test="money_unit != null">
				`money_unit` = #{money_unit,jdbcType=INTEGER},
			</if>
			<if test="rent_time != null">
				`rent_time` = #{rent_time,jdbcType=INTEGER},
			</if>
			<if test="maintain_time != null">
				`maintain_time` = #{maintain_time,jdbcType=TIMESTAMP},
			</if>
			<if test="begin_time != null">
				`begin_time` = #{begin_time,jdbcType=TIMESTAMP},
			</if>
			<if test="times != null">
				`times` = #{times,jdbcType=TIMESTAMP},
			</if>
			<if test="fitment != null">
				`fitment` = #{fitment,jdbcType=INTEGER},
			</if>
			<if test="types != null">
				`types` = #{types,jdbcType=INTEGER},
			</if>
			<if test="entering_broker_id != null">
				`entering_broker_id` = #{entering_broker_id,jdbcType=BIGINT},
			</if>
			<if test="home_name != null">
				`home_name` = #{home_name,jdbcType=VARCHAR},
			</if>
			<if test="home_number != null">
				`home_number` = #{home_number,jdbcType=VARCHAR},
			</if>
			<if test="solid_broker_id != null">
				`solid_broker_id` = #{solid_broker_id,jdbcType=BIGINT},
			</if>
			<if test="maintain_broker_id != null">
				`maintain_broker_id` = #{maintain_broker_id,jdbcType=BIGINT},
			</if>
			<if test="key_broker_id != null">
				`key_broker_id` = #{key_broker_id,jdbcType=BIGINT},
			</if>
			<if test="whether != null">
				`whether` = #{whether,jdbcType=INTEGER},
			</if>
			<if test="door_id != null">
				`door_id` = #{door_id,jdbcType=BIGINT},
			</if>
			<if test="shop_id != null">
				`shop_id` = #{shop_id,jdbcType=BIGINT},
			</if>
			<if test="open_broker_id != null">
				`open_broker_id` = #{open_broker_id,jdbcType=BIGINT},
			</if>
		</set>
		where `id` = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yqwl.pojo.HousesNew">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update `t_houses_new`
		set `houes_number` = #{houes_number,jdbcType=VARCHAR},
		`building_id` = #{building_id,jdbcType=BIGINT},
		`work_name` = #{work_name,jdbcType=VARCHAR},
		`house_picture` = #{house_picture,jdbcType=VARCHAR},
		`office_space` = #{office_space,jdbcType=INTEGER},
		`location_number` = #{location_number,jdbcType=INTEGER},
		`house_type` = #{house_type,jdbcType=VARCHAR},
		`location` = #{location,jdbcType=INTEGER},
		`money` = #{money,jdbcType=DECIMAL},
		`money_unit` = #{money_unit,jdbcType=INTEGER},
		`rent_time` = #{rent_time,jdbcType=INTEGER},
		`maintain_time` = #{maintain_time,jdbcType=TIMESTAMP},
		`begin_time` = #{begin_time,jdbcType=TIMESTAMP},
		`times` = #{times,jdbcType=TIMESTAMP},
		`fitment` = #{fitment,jdbcType=INTEGER},
		`types` = #{types,jdbcType=INTEGER},
		`entering_broker_id` = #{entering_broker_id,jdbcType=BIGINT},
		`home_name` = #{home_name,jdbcType=VARCHAR},
		`home_number` = #{home_number,jdbcType=VARCHAR},
		`solid_broker_id` = #{solid_broker_id,jdbcType=BIGINT},
		`maintain_broker_id` = #{maintain_broker_id,jdbcType=BIGINT},
		`key_broker_id` = #{key_broker_id,jdbcType=BIGINT},
		`whether` = #{whether,jdbcType=INTEGER},
		`door_id` = #{door_id,jdbcType=BIGINT},
		`shop_id` = #{shop_id,jdbcType=BIGINT},
		`open_broker_id` = #{open_broker_id,jdbcType=BIGINT}
		where `id` = #{id,jdbcType=BIGINT}
	</update>
	<resultMap id="QuerySceneTypeVo" type="com.yqwl.Vo.HousesNewVo">
		<result column="building_id" property="building_id" />
		<result column="work_name" property="work_name" />
		<result column="office_space" property="office_space" />
		<result column="house_picture" property="house_picture" />
		<result column="location_number" property="location_number" />
		<result column="house_type" property="house_type" />
		<result column="location" property="location" />
		<result column="money" property="money" />
		<result column="money_unit" property="money_unit" />
		<result column="rent_time" property="rent_time" />
		<result column="fitment" property="fitment" />
		<result column="times" property="times" />
		<result column="maintain_broker_id" property="maintain_broker_id" />
		<result column="mansion_name" property="mansion_name" />
		<result column="mansion_picture" property="mansion_picture" />
		<result column="region_sh_id" property="region_sh_id" />
		<result column="region_shname" property="region_shname" />
		<result column="region_city_id" property="region_city_id" />
		<result column="region_cityname" property="region_cityname" />
		<result column="region_id" property="region_id" />
		<result column="region_name" property="region_name" />
		<result column="district" property="district" />
		<result column="floor" property="floor" />
		<result column="intro" property="intro" />
		<result column="circum" property="circum" />
		<result column="longitude" property="longitude" />
		<result column="latitude" property="latitude" />
	</resultMap>

	<select id="selectByFindID" parameterType="java.lang.Long"
		resultMap="QuerySceneTypeVo">
		SELECT
		hn.building_id as building_id,
		hn.work_name as
		work_name,
		hn.office_space as office_space,
		hn.location_number as
		location_number,
		hn.house_type as house_type,
		hn.location as location,
		hn.money as money,
		hn.money_unit as money_unit,
		hn.rent_time as
		rent_time,
		hn.fitment as fitment,
		hn.times as times,
		hn.maintain_broker_id as maintain_broker_id,
		hn.begin_time as begin_time,
		b.mansion_name as
		mansion_name,
		b.mansion_picture as mansion_picture,
		b.region_sh_id as
		region_sh_id,
		b.region_shname as region_shname,
		b.region_city_id as
		region_city_id,
		b.region_cityname as region_cityname,
		b.region_id as
		region_id,
		b.region_name as region_name,
		b.district as district,
		b.floor
		as floor,
		b.intro as intro,
		b.circum as circum,
		b.longitude as longitude,
		b.latitude as latitude
		FROM
		t_houses_new hn,t_building b
		WHERE
		b.id=hn.building_id
		AND
		hn.id=#{id}
	</select>
	<!-- 客户需求与房源匹配 -->
	<select id="selectPaired" parameterType="com.yqwl.Vo.HousesNewVo"
		resultMap="QuerySceneTypeVo">
		SELECT
		hn.id as id,
		hn.building_id as building_id,
		hn.work_name as
		work_name,
		hn.office_space as office_space,
		hn.location_number as
		location_number,
		hn.house_type as house_type,
		hn.location as location,
		hn.money as money,
		hn.money_unit as money_unit,
		hn.fitment as fitment,
		b.mansion_name as mansion_name,
		b.region_id as region_id,
		b.region_name
		as region_name,
		b.district as district,
		b.floor as floor
		FROM
		t_houses_new hn,t_building b
		<where>
			b.id=hn.building_id
			AND hn.types=1
			<if test="area != null and ratio != null and area != 0 and ratio != 0">
				AND (`office_space` <![CDATA[>=]]>
				#{area} AND `office_space` <![CDATA[<=]]>
				#{ratio})
			</if>
			<if test="money != null and moneys != null and money != 0 and moneys != 0">
				AND (`money` <![CDATA[>=]]>
				#{money} AND `money` <![CDATA[<=]]>
				#{moneys})
			</if>
			<if test="region_id != null and region_id != 0">
				AND b.region_id = #{region_id}
			</if>
			<if test="building_id != null and building_id != 0">
				AND hn.building_id = #{building_id}
			</if>
		</where>
		LIMIT #{page},#{limit}
	</select>
	<select id="selectLike" parameterType="com.yqwl.Vo.HousesNewVo"
		resultMap="QuerySceneTypeVo">
		SELECT
		hn.id as id,
		hn.work_name as work_name,
		hn.house_picture as house_picture,
		hn.money as money,
		hn.money_unit as
		money_unit,
		b.region_sh_id as region_sh_id,
		b.region_shname as
		region_shname,
		b.region_city_id as region_city_id,
		b.region_cityname as
		region_cityname,
		b.region_id as region_id,
		b.region_name as region_name
		FROM
		t_houses_new hn,t_building b
		WHERE
		b.id=hn.building_id
		and
		b.region_city_id=#{region_city_id}
		and hn.whether = 1
		and hn.types = 1
		and hn.whether = 1
		and hn.`types` = 1
		ORDER BY
		hn.times
		DESC
		LIMIT #{page},#{limit}
	</select>
	
	
	<select id="listHousesNewByCondition" resultType="com.yqwl.Vo.HousesVo">
		SELECT
		h.*,
		b.mansion_name,
		pd.door_num,
		pb.name
		FROM
		t_building AS b
		JOIN t_houses_new AS h ON b.id = h.building_id,
		t_owner AS o,
		t_plot_door AS pd,
		t_plot_build AS pb
		WHERE
		b.region_city_id = #{cityId}
		AND
		h.door_id = pd.id
		AND
		pd.build_id = pb.id
		AND
		h.id = o.home_id
		AND (ISNULL(#{regionId}) OR b.region_id = #{regionId})
		AND (
		(ISNULL(#{startSpace})
		OR h.office_space <![CDATA[>=]]>
		#{startSpace})
		AND (ISNULL(#{endSpace})
		OR h.office_space <![CDATA[<=]]>
		#{endSpace})
		)
		<if test="startMoney !=null or endMoney != null">
			AND (
			<if test="startMoney != null">
				h.money <![CDATA[>=]]>
				#{startMoney}
			</if>
			<if test="startMoney != null and endMoney != null">
				AND h.money <![CDATA[<=]]>
				#{endMoney}
			</if>
			<if test="endMoney != null and startMoney == null">
				h.money <![CDATA[<=]]>
				#{endMoney}
			</if>
			)
		</if>
		AND (ISNULL(#{fitment}) OR h.fitment = #{fitment})
		AND (ISNULL(#{brokerId}) OR h.maintain_broker_id = #{brokerId})
		AND (ISNULL(#{broker_id}) OR h.maintain_broker_id = #{broker_id})
		AND (ISNULL(#{home_number}) OR o.number LIKE CONCAT('%', #{home_number},'%'))
		AND (ISNULL(#{buildingId}) OR h.building_id = #{buildingId})
		AND (ISNULL(#{whether}) OR h.whether = #{whether})
		AND (ISNULL(#{home_name}) OR h.home_name LIKE CONCAT('%', #{home_name},'%'))
		GROUP BY h.id
		ORDER BY
		h.begin_time DESC
	</select>

	<select id="ListBackHousesNew" resultType="com.yqwl.Vo.HousesVo">
		SELECT
		h.*,
		br.real_name,
		br.phonemunber,
		b.mansion_name,
		pd.door_num,
		pb.name
		FROM
		t_building AS b
		JOIN t_houses_new AS h ON b.id = h.building_id,
		t_broker AS br,
		t_owner AS o,
		t_plot_door AS pd,
		t_plot_build AS pb
		WHERE
		h.maintain_broker_id = br.id
		AND
		h.door_id = pd.id
		AND
		pd.build_id = pb.id
		AND
		h.id = o.home_id
		AND
		b.region_city_id = #{cityId}
		AND (ISNULL(#{regionId})
		OR b.region_id = #{regionId})
		AND (
		(ISNULL(#{startSpace})
		OR h.office_space <![CDATA[>=]]>
		#{startSpace})
		AND (ISNULL(#{endSpace})
		OR h.office_space <![CDATA[<=]]>
		#{endSpace})
		)
		<if test="startMoney !=null or endMoney != null">
			AND (
			<if test="startMoney != null">
				h.money <![CDATA[>=]]>
				#{startMoney}
			</if>
			<if test="startMoney != null and endMoney != null">
				AND h.money <![CDATA[<=]]>
				#{endMoney}
			</if>
			<if test="endMoney != null and startMoney == null">
				h.money <![CDATA[<=]]>
				#{endMoney}
			</if>
			)
		</if>
		AND (ISNULL(#{fitment}) OR h.fitment = #{fitment})
		AND h.shop_id = #{shopId}
		AND (ISNULL(#{brokerId}) OR h.maintain_broker_id = #{brokerId})
		AND (ISNULL(#{broker_id}) OR h.maintain_broker_id = #{broker_id})
		AND (ISNULL(#{home_number}) OR o.number LIKE CONCAT('%', #{home_number},'%'))
		AND (ISNULL(#{buildingId}) OR h.building_id = #{buildingId})
		AND (ISNULL(#{whether}) OR h.whether = #{whether})
		AND (ISNULL(#{home_name}) OR h.home_name LIKE CONCAT('%', #{home_name},'%'))
		GROUP BY h.id
		ORDER BY
		h.begin_time DESC
	</select>
	

	<select id="listHousesNewByBuildingId" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from `t_houses_new`
		where `building_id` = #{buildingId}
		and `whether` = 1
		order by `money` ASC
	</select>
	<!-- 查询该商厦下的房源信息 -->
	<select id="selectHousesNew" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from `t_houses_new`
		where `building_id` = #{buildingId}
		order by `money` ASC
	</select>
	
	<select id="listByShopId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from `t_houses_new`
		where `shop_id` = #{id}
	</select>
	
	<!-- 添加决策分析(根据条件查询相关经纪人房源状况) -->
	<select id="getCountByWhether" resultType="java.lang.Integer">
		select
		COUNT(1)
		from `t_houses_new`
		where `entering_broker_id` = #{id} AND `whether` = #{whether}
		<if test="startTime != null and endTime != null">
			AND (`times` <![CDATA[>=]]>
			#{startTime} AND `times` <![CDATA[<=]]>
			#{endTime})
		</if>

	</select>

	<!-- 修改房源状态活开盘修改 -->
	<update id="updateSelective" parameterType="com.yqwl.pojo.HousesNew">
		update `t_houses_new`
		<set>
			<if test="whether != null">
				`whether` = #{whether,jdbcType=INTEGER},
			</if>
			<if test="open_broker_id != null">
				`open_broker_id` = #{open_broker_id,jdbcType=BIGINT},
			</if>
		</set>
		where `id` = #{id,jdbcType=BIGINT}
	</update>
	
	
	<select id="frontListHousesNewByCondition" resultMap="BaseResultMap">
		SELECT
		h.*
		FROM
		t_building AS b
		JOIN t_houses_new AS h ON b.id = h.building_id,
		t_owner AS o
		WHERE
		b.region_city_id = #{cityId}
		AND
		h.id = o.home_id
		AND (ISNULL(#{regionId}) OR b.region_id = #{regionId})
		AND (
		(ISNULL(#{startSpace})
		OR h.office_space <![CDATA[>=]]>
		#{startSpace})
		AND (ISNULL(#{endSpace})
		OR h.office_space <![CDATA[<=]]>
		#{endSpace})
		)
		<if test="startMoney !=null or endMoney != null">
			AND (
			<if test="startMoney != null">
				h.money <![CDATA[>=]]>
				#{startMoney}
			</if>
			<if test="startMoney != null and endMoney != null">
				AND h.money <![CDATA[<=]]>
				#{endMoney}
			</if>
			<if test="endMoney != null and startMoney == null">
				h.money <![CDATA[<=]]>
				#{endMoney}
			</if>
			)
		</if>
		AND (ISNULL(#{fitment}) OR h.fitment = #{fitment})
		AND h.types = 1
		ORDER BY
		h.id DESC
	</select>
	
	<select id="listByMaintainBrokerId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from `t_houses_new`
		where `maintain_broker_id` = #{brokerId}
	</select>
</mapper>